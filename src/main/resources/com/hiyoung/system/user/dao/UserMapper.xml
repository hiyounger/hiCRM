<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hiyoung.system.user.dao.UserMapper">
  <!--<resultMap id="BaseResultMap2" type="com.hiyoung.system.user.entity.User">
      <id column="user_id" property="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="username" property="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="password" property="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="user_createtime" property="createtime" javaType="java.util.Date" jdbcType="DATE" />
      <result column="EMAIL" property="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="PHONE"  property="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="salt" property="salt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="user_sortnum" property="sortnum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="user_status" property="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="user_updatetime"  property="updatetime" javaType="java.util.Date" jdbcType="DATE" />
      <result column="USERNOTE" property="usernote" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="user_createby" property="createby" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="user_updateby" property="updateby" javaType="java.lang.Integer" jdbcType="INTEGER" />
    <association property="role" javaType="com.hiyoung.system.user.entity.Role" column="role_id">
      <id column="role_id" property="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="role_createtime" property="createtime" javaType="java.util.Date" jdbcType="DATE" />
      <result column="ROLENAME" property="rolename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="ROLENOTE" property="rolenote" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="role_sortnum" property="sortnum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="role_status" property="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="role_UPDATETIME" property="updatetime" javaType="java.util.Date" jdbcType="DATE" />
      <result column="role_CREATEBY" property="createby" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="role_UPDATEBY" property="updateby" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </association>
  </resultMap>-->


  <resultMap id="BaseResultMap" type="com.hiyoung.system.user.entity.User">
      <id column="id" javaType="java.lang.Integer" jdbcType="INTEGER" property="id"/>
      <result column="username" property="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="password" property="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="sex"  property="sex" javaType="java.lang.String" jdbcType="DATE" />
      <result column="EMAIL" property="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="PHONE" property="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="department" property="department" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="position" property="position" javaType="java.lang.String" jdbcType="INTEGER" />
      <result column="supervisor" property="supervisor" javaType="java.lang.String" jdbcType="INTEGER" />
      <result column="role" property="role" javaType="java.lang.String" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List">
    username,sex,email,department,position,supervisor,phone
  </sql>

<!--<select id="getUser" resultMap="BaseResultMap2">
  select user.id as user_id, username, password, user.CREATETIME as user_createtime, EMAIL, PHONE, salt, user.SORTNUM as user_sortnum, user.STATUS as user_status, user.UPDATETIME as user_updatetime,
  USERNOTE, user.CREATEBY as user_createby, user.UPDATEBY as user_updateby , role.id as role_id, role.CREATETIME as role_createtime, ROLENAME, ROLENOTE, role.SORTNUM as role_sortnum, role.STATUS as role_status, role.UPDATETIME as role_updatetime,role.CREATEBY as role_createby, role.UPDATEBY as role_updateby
  from tb_system_user as user left join tb_system_user_role as user_role on user.id=
      user_role.userid left join tb_system_role as role on user_role.roleid = role.id where username =#{username} and password =#{password};
</select>-->
<select id="getUser" resultMap="BaseResultMap">
  select id, <include refid="Base_Column_List"></include> ,role from tb_user where username =#{username} and password =#{password} and status =1;
</select>

  <select id="listUsers" resultMap="BaseResultMap">
  select id, <include refid="Base_Column_List"></include> ,role
  from tb_user where status =1
  <choose>
       <when test="id>0">
           and id=#{id}
       </when>
       <otherwise>
           limit #{offset},#{count}
       </otherwise>
  </choose>

</select>
  
  <select id="getCount" resultType="integer">
    select count(id) from tb_user where status =1
    <if test="id>0">
        and id =#{id}
    </if>

  </select>

    <insert id="insert" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into tb_user ( <include refid="Base_Column_List"></include> ,password,status ) VALUES
        (#{username},#{sex},#{email},#{department},#{position},#{supervisor},#{phone},#{password},1)

    </insert>

    <update id="deleteByIds" parameterType="java.util.List" >
        update tb_user set status=0 where
        <foreach collection="list" item="item" open=" id=" separator="or id=" >
            #{item}
        </foreach>
    </update>
</mapper>